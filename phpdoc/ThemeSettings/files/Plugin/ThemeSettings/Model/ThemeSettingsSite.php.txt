<?php
/**
 * ThemeSettingsSite Model
 *
 * @author Noriko Arai <arai@nii.ac.jp>
 * @link http://www.netcommons.org NetCommons Project
 * @license http://www.netcommons.org/license.txt NetCommons License
 * @copyright Copyright 2014, NetCommons Project
 */

App::uses('AppModel', 'Model');

/**
 * ThemeSettingsSite Model
 *
 * @author Kotaro Hokada <kotaro.hokada@gmail.com>
 * @package NetCommons\ThemeSettingsSite\Model
 */
class ThemeSettingsSite extends AppModel {

/**
 * テーブルの指定
 *
 * @var bool
 */
	public $useTable = 'site_settings';

/**
 * name
 *
 * @var bool
 */
	public $name = 'ThemeSettingsSite';

/**
 * __construct
 *
 * @param bool $id id
 * @param null $table db table
 * @param null $ds connection
 * @return void
 * @SuppressWarnings(PHPMD)
 */
	public function __construct($id = false, $table = null, $ds = null) {
		parent::__construct($id, $table, $ds);
	}

/**
 * テーマの更新
 *
 * @param array $theme theme dir name
 * @return bool True if successful
 */
	public function updateTheme($theme) {
		$updateData = array();
		if (is_array($theme)) {
			$updateData = $theme;
		} elseif (is_string($theme)) {
			$updateData['ThemeSettingsSite']['value'] = $theme;
		}
		//旧データの存在を確認
		$ck = $this->find('first', array(
			'conditions' => array('key' => 'theme')
		));
		if ($ck
			&& isset($ck['ThemeSettingsSite'])
			&& isset($ck['ThemeSettingsSite']['id'])
		) {
			//データの更新
			$updateData['ThemeSettingsSite']['key'] = 'theme';
			$updateData['ThemeSettingsSite']['id'] = $ck['ThemeSettingsSite']['id'];
			return $this->saveAssociated($updateData);
		} else {
			//データの保存 insert
			$updateData['ThemeSettingsSite']['key'] = 'theme';
			return $this->saveAssociated($updateData);
		}
	}

/**
 * サイトのテーマ名の取得
 *
 * @return string|null theme dir name
 */
	public function getThemeName() {
		$theme = $this->getTheme();
		if ($theme && isset($theme['ThemeSettingsSite'])
			&& isset($theme['ThemeSettingsSite']['value'])
			&& $theme['ThemeSettingsSite']['value']
		) {
			return $theme['ThemeSettingsSite']['value'];
		}
		return null;
	}

/**
 * サイトのテーマデータ（配列）の取得
 *
 * @return array|null recode
 */
	public function getTheme() {
		$theme = $this->find('first', array(
			'conditions' => array('ThemeSettingsSite.key' => 'theme')
		));
		if ($theme) {
			return $theme;
		}
		return null;
	}
}

